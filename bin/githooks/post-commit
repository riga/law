#!/usr/bin/env bash

# Custom post-commit hook that runs linting and type checks.
# In case a variable LAW_GITHOOKS_SKIP is set, the hook is skipped.

action() {
    # original lfs post-commit hook
    command -v git-lfs >/dev/null 2>&1 || { printf >&2 "\n%s\n\n" "This repository is configured for Git LFS but 'git-lfs' was not found on your path. If you no longer wish to use Git LFS, remove this hook by deleting the 'post-commit' file in the hooks directory (set by 'core.hookspath'; usually '.git/hooks')."; exit 2; }
    git lfs post-commit "$@" || return "$?"

    [ ! -z "${LAW_GITHOOKS_SKIP}" ] && return "0"

    local shell_is_zsh="$( [ -z "${ZSH_VERSION}" ] && echo "false" || echo "true" )"
    local this_file="$( ${shell_is_zsh} && echo "${(%):-%x}" || echo "${BASH_SOURCE[0]}" )"
    local this_dir="$( cd "$( dirname "${this_file}" )" && pwd )"

    # find the project dir which is two levels up when called from law/bin/githooks or
    # law/.git/hooks
    local law_dir="$( cd "${this_dir}/../.." && pwd )"
    if [ ! -f "${law_dir}/tests/linting.sh" ]; then
        >&2 echo "detected law repository directory '${law_dir}' seems invalid, not running post-commit hook"
        return "0"
    fi

    # run linting and type checks
    bash "${law_dir}/tests/all.sh" "" "linting typecheck"
    echo

    # always end successfully
    return "0"
}
action "$@"
